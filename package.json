{
  "name": "nui",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "typeorm": "typeorm-ts-node-commonjs",
    "------FEEDBACK------": "------------------------",
    "build-feedback-website": "ng build --project feedback-website --configuration=production",
    "build-feedback-server": "ng build --project feedback-server --configuration=production",
    "build-feedback-app": "ng build --project feedback-app --configuration=production",
    "serve-feedback-server": ". ./apps/feedback-server/local.sh && ng serve --project feedback-server",
    "serve-feedback-app": "ng serve --project feedback-app",
    "i18n-feedback-app": "ng extract-i18n --project=feedback-app --outputPath ./apps/feedback-app/locale && xliffmerge --profile apps/feedback-app/xliffmerge.json",
    "serve-feedback": "concurrently --kill-others \"npm run serve-feedback-server\" \"npm run serve-feedback-app\"",
    "feedback-server:typeorm:cli": "export NODE_ENV=migration &&. ./apps/feedback-server/local.sh && ts-node --project apps/feedback-server/tsconfig.app.json -r tsconfig-paths/register ./node_modules/typeorm/cli -f ./apps/feedback-server/src/ormconfig.ts",
    "feedback-server:typeorm:cli:ci": "export NODE_ENV=migration && ts-node --project apps/feedback-server/tsconfig.app.json -r tsconfig-paths/register ./node_modules/typeorm/cli -f ./apps/feedback-server/src/ormconfig.ts",
    "feedback-server:migration:generate": "npm run feedback-server:typeorm:cli -- migration:generate -n",
    "feedback-server:migration:create": "npm run feedback-server:typeorm:cli -- migration:create -n",
    "feedback-server:migration:run": "npm run feedback-server:typeorm:cli -- migration:run",
    "feedback-server:migration:show": "npm run feedback-server:typeorm:cli -- migration:show",
    "feedback-server:migration:revert": "npm run feedback-server:typeorm:cli -- migration:revert",
    "feedback-server:migration:run:ci": "npm run feedback-server:typeorm:cli:ci -- migration:run",
    "feedback-server:migration:show:ci": "npm run feedback-server:typeorm:cli:ci -- migration:show",
    "feedback-server:migration:revert:ci": "npm run feedback-server:typeorm:cli:ci -- migration:revert",
    "------CRON------": "------------------------",
    "build-cron-server": "ng build --project cron-server --configuration=production",
    "build-cron-app": "ng build --project cron-app --configuration=production",
    "serve-cron-app": "ng serve --project cron-app",
    "serve-cron-server": ". ./apps/cron-server/local.sh && ng serve --project cron-server",
    "i18n-cron-app": "ng extract-i18n --project=cron-app --outputPath ./apps/cron-app/locale && xliffmerge --profile apps/cron-app/xliffmerge.json",
    "cron-server:typeorm:cli": "export NODE_ENV=migration &&. ./apps/cron-server/local.sh && ts-node --project apps/cron-server/tsconfig.app.json -r tsconfig-paths/register ./node_modules/typeorm/cli -f ./apps/cron-server/src/ormconfig.ts",
    "cron-server:typeorm:cli:ci": "export NODE_ENV=migration && ts-node --project apps/cron-server/tsconfig.app.json -r tsconfig-paths/register ./node_modules/typeorm/cli -f ./apps/cron-server/src/ormconfig.ts",
    "cron-server:migration:generate": "npm run cron-server:typeorm:cli -- migration:generate -n",
    "cron-server:migration:create": "npm run cron-server:typeorm:cli -- migration:create -n",
    "cron-server:migration:run": "npm run cron-server:typeorm:cli -- migration:run",
    "cron-server:migration:show": "npm run cron-server:typeorm:cli -- migration:show",
    "cron-server:migration:revert": "npm run cron-server:typeorm:cli -- migration:revert",
    "cron-server:migration:run:ci": "npm run cron-server:typeorm:cli:ci -- migration:run",
    "cron-server:migration:show:ci": "npm run cron-server:typeorm:cli:ci -- migration:show",
    "cron-server:migration:revert:ci": "npm run cron-server:typeorm:cli:ci -- migration:revert",
    "serve-cron": "concurrently --kill-others \"npm run serve-cron-server\" \"npm run serve-cron-app\"",
    "------SHARED------": "------------------------",
    "ng": "nx",
    "postinstall": "node ./decorate-angular-cli.js && ngcc --properties es2015 browser module main",
    "nx": "nx",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "nx workspace-lint && ng lint",
    "e2e": "ng e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "nx migrate latest",
    "workspace-generator": "nx workspace-generator",
    "dep-graph": "nx dep-graph",
    "help": "nx help"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "13.3.10",
    "@angular/cdk": "13.3.8",
    "@angular/common": "13.3.10",
    "@angular/compiler": "13.3.10",
    "@angular/core": "13.3.10",
    "@angular/forms": "13.3.10",
    "@angular/platform-browser": "13.3.10",
    "@angular/platform-browser-dynamic": "13.3.10",
    "@angular/router": "13.3.10",
    "@aws-sdk/client-ses": "^3.26.0",
    "@golevelup/nestjs-stripe": "^0.2.1",
    "@mailchimp/mailchimp_marketing": "^3.0.59",
    "@nestjs-modules/mailer": "^1.6.0",
    "@nestjs/axios": "0.0.3",
    "@nestjs/bull": "^0.5.5",
    "@nestjs/common": "^8.0.0",
    "@nestjs/core": "^8.0.0",
    "@nestjs/event-emitter": "^1.0.0",
    "@nestjs/jwt": "^8.0.0",
    "@nestjs/passport": "^8.0.1",
    "@nestjs/platform-express": "^8.0.0",
    "@nestjs/schedule": "^1.0.1",
    "@nestjs/swagger": "^5.2.1",
    "@nestjs/terminus": "^7.2.0",
    "@nestjs/typeorm": "^7.1.5",
    "@ngrx/component-store": "13.0.1",
    "@ngrx/effects": "13.0.1",
    "@ngrx/entity": "13.0.1",
    "@ngrx/router-store": "13.0.1",
    "@ngrx/store": "13.0.1",
    "@nrwl/angular": "14.1.9",
    "adm-zip": "^0.5.9",
    "aws-sdk": "^2.1043.0",
    "bcrypt": "^5.0.1",
    "beew": "^1.1.1",
    "bull": "^4.8.4",
    "cache-manager": "^3.6.0",
    "canvas-confetti": "^1.4.0",
    "class-transformer": "^0.4.0",
    "class-validator": "^0.13.1",
    "class-validator-jsonschema": "^3.1.0",
    "clone-buffer": "^1.0.0",
    "compression": "^1.7.4",
    "concurrently": "^7.2.1",
    "cookie-parser": "^1.4.6",
    "cron-validator": "^1.2.1",
    "express-handlebars": "^5.3.3",
    "handlebars-helpers": "^0.10.0",
    "html-metadata": "^1.7.1",
    "humanparser": "^2.6.0",
    "i": "^0.3.7",
    "keyword-extractor": "^0.0.21",
    "lodash": "^4.17.21",
    "lodash.merge": "^4.6.2",
    "mautic": "^0.0.4",
    "microdata-node": "^2.0.0",
    "mime": "^3.0.0",
    "moment-timezone": "^0.5.33",
    "multer": "^1.4.3",
    "mysql2": "^2.3.0",
    "nestjs": "^0.0.1",
    "nestjs-s3": "^1.0.1",
    "newsapi": "^2.4.1",
    "ng-heroicons": "^11.0.0",
    "ng2-date-picker": "^12.0.3",
    "ngrx-store-localstorage": "^12.0.0",
    "ngx-cookie-service": "^13.1.2",
    "ngx-mask": "^12.0.0",
    "ngx-quill": "^16.1.1",
    "node-html-markdown": "^1.1.3",
    "node-html-to-image": "^3.2.0",
    "node-mautic": "^1.2.6",
    "nodemailer": "^6.6.3",
    "npm": "^7.24.1",
    "passport": "^0.4.1",
    "passport-google-oauth20": "^2.0.0",
    "passport-headerapikey": "^1.2.2",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pretty-bytes": "^6.0.0",
    "promised-handlebars": "^2.0.1",
    "qrcode": "^1.4.4",
    "quill": "^1.3.7",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.0.0",
    "sass": "^1.35.1",
    "short-uuid": "^4.2.0",
    "sitemap": "^7.0.0",
    "slack": "^11.0.2",
    "soap": "^0.43.0",
    "stripe": "^8.170.0",
    "swagger-ui-express": "^4.4.0",
    "ts-node-dev": "^1.1.8",
    "tslib": "^2.0.0",
    "typeorm": "^0.2.36",
    "unzipper": "^0.10.11",
    "webpack": "^5.53.0",
    "zone.js": "0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "13.3.7",
    "@angular-eslint/eslint-plugin": "13.0.1",
    "@angular-eslint/eslint-plugin-template": "13.0.1",
    "@angular-eslint/template-parser": "13.0.1",
    "@angular/cli": "13.3.7",
    "@angular/compiler-cli": "13.3.10",
    "@angular/language-service": "13.3.10",
    "@angular/localize": "13.3.10",
    "@nestjs/schematics": "^8.0.0",
    "@nestjs/testing": "^8.0.0",
    "@ngrx/schematics": "13.0.1",
    "@ngrx/store-devtools": "13.0.1",
    "@nrwl/cli": "14.1.9",
    "@nrwl/cypress": "14.1.9",
    "@nrwl/devkit": "14.1.9",
    "@nrwl/eslint-plugin-nx": "14.1.9",
    "@nrwl/jest": "14.1.9",
    "@nrwl/linter": "14.1.9",
    "@nrwl/nest": "14.1.9",
    "@nrwl/node": "14.1.9",
    "@nrwl/nx-cloud": "14.0.5",
    "@nrwl/workspace": "14.1.9",
    "@types/bcrypt": "^5.0.0",
    "@types/bull": "^3.15.8",
    "@types/cache-manager": "^3.4.3",
    "@types/canvas-confetti": "^1.4.2",
    "@types/cron": "^1.7.3",
    "@types/jest": "27.4.1",
    "@types/lodash.merge": "^4.6.6",
    "@types/multer": "^1.4.7",
    "@types/node": "14.14.33",
    "@types/nodemailer": "^6.4.4",
    "@types/passport-google-oauth20": "^2.0.9",
    "@types/passport-jwt": "^3.0.6",
    "@types/passport-local": "^1.0.34",
    "@typescript-eslint/eslint-plugin": "5.18.0",
    "@typescript-eslint/parser": "5.18.0",
    "cypress": "^7.3.0",
    "dotenv": "10.0.0",
    "eslint": "8.12.0",
    "eslint-config-prettier": "8.1.0",
    "eslint-plugin-cypress": "^2.10.3",
    "jest": "27.5.1",
    "jest-preset-angular": "11.1.1",
    "nx": "14.1.9",
    "prettier": "2.6.2",
    "ts-jest": "27.1.4",
    "ts-node": "~9.1.1",
    "typescript": "4.6.4"
  }
}
